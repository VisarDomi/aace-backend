"""second

Revision ID: 98d1aa97a453
Revises: 32decd7dd69f
Create Date: 2019-07-15 15:19:37.569905

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "98d1aa97a453"
down_revision = "32decd7dd69f"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "polls",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("name", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("body", sa.Text(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("author_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["author_id"], ["users.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "mediaevents",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("filename", sa.String(), nullable=True),
        sa.Column("url", sa.String(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("event_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["event_id"], ["events.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "mediapolls",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("title", sa.String(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("filename", sa.String(), nullable=True),
        sa.Column("url", sa.String(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("poll_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["poll_id"], ["polls.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "options",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("body", sa.String(), nullable=True),
        sa.Column("timestamp", sa.DateTime(), nullable=True),
        sa.Column("poll_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["poll_id"], ["polls.id"]),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "organizationgroup_event",
        sa.Column("organizationgroup_id", sa.Integer(), nullable=True),
        sa.Column("event_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["event_id"], ["events.id"]),
        sa.ForeignKeyConstraint(["organizationgroup_id"], ["organizationgroups.id"]),
    )
    op.create_table(
        "organizationgroup_poll",
        sa.Column("organizationgroup_id", sa.Integer(), nullable=True),
        sa.Column("poll_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["organizationgroup_id"], ["organizationgroups.id"]),
        sa.ForeignKeyConstraint(["poll_id"], ["polls.id"]),
    )
    op.create_table(
        "user_option",
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("option_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(["option_id"], ["options.id"]),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"]),
    )
    op.drop_table("user_event")
    op.add_column("comments", sa.Column("event_id", sa.Integer(), nullable=True))
    op.add_column("comments", sa.Column("poll_id", sa.Integer(), nullable=True))
    op.create_foreign_key(None, "comments", "events", ["event_id"], ["id"])
    op.create_foreign_key(None, "comments", "polls", ["poll_id"], ["id"])
    op.add_column("events", sa.Column("author_id", sa.Integer(), nullable=True))
    op.add_column("events", sa.Column("description", sa.Text(), nullable=True))
    op.add_column("events", sa.Column("name", sa.String(), nullable=True))
    op.create_foreign_key(None, "events", "users", ["author_id"], ["id"])
    op.drop_column("events", "title")
    op.drop_column("events", "location")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "events", sa.Column("location", sa.TEXT(), autoincrement=False, nullable=True)
    )
    op.add_column(
        "events", sa.Column("title", sa.VARCHAR(), autoincrement=False, nullable=True)
    )
    op.drop_constraint(None, "events", type_="foreignkey")
    op.drop_column("events", "name")
    op.drop_column("events", "description")
    op.drop_column("events", "author_id")
    op.drop_constraint(None, "comments", type_="foreignkey")
    op.drop_constraint(None, "comments", type_="foreignkey")
    op.drop_column("comments", "poll_id")
    op.drop_column("comments", "event_id")
    op.create_table(
        "user_event",
        sa.Column("user_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column("event_id", sa.INTEGER(), autoincrement=False, nullable=True),
        sa.Column(
            "type_of_engagement", sa.VARCHAR(), autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ["event_id"], ["events.id"], name="user_event_event_id_fkey"
        ),
        sa.ForeignKeyConstraint(
            ["user_id"], ["users.id"], name="user_event_user_id_fkey"
        ),
    )
    op.drop_table("user_option")
    op.drop_table("organizationgroup_poll")
    op.drop_table("organizationgroup_event")
    op.drop_table("options")
    op.drop_table("mediapolls")
    op.drop_table("mediaevents")
    op.drop_table("polls")
    # ### end Alembic commands ###
